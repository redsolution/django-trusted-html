"""
Attributes for Index of Attributes
http://www.w3.org/TR/REC-html40/index/attributes.html
"""

from trustedhtml.rules.html.values import values

# We don`t want to support whole document.
# We share content only as a part of our page.
# So we separate it (remove from allowed).
for_docement = [
    'body',
    'head',
    'html',
    'link',
    'meta',
    'title',
]

# We don`t want to support frames. Like document elements.
for_frame = [
    'frame',
    'frameset',
    'noframes',
]

# We don`t want to support
for_form = [
    'button',
    'fieldset',
    'form',
    'input',
    'label',
    'legend',
    'optgroup',
    'option',
    'select',
    'textarea',
]

# Remove
remove_content = [
    # It is deprecated, and it is security hole.
    'applet',
    # It is security hole.
    'iframe',
    # Strange, but we don`t want to allow it.
    'script'
]

remove_tag = [
    # It can change meaning of url, so it must be disabled
    'base'
    # It will break fonts
    'basefont',
    # Deprecated
    'center',
    # Deprecated
    'dir',
    # Deprecated, it will break fonts
    'font',
    # Deprecated
    'isindex',
    # Deprecated
    'menu',
    # We want to show text that must be shown only if user agent  
    # don`t support (execute) script. Because of we disable any script.
    'noscript',
    # Deprecated
    's',
    # Deprecated
    'strike',
    # It will break style sheets
    'style',
    # Deprecated
    'u',
]

# We must specified css rules for all elements.
# So, we want to use as little elements as possible.
simple = [
    'a',
    'address',
    'blockquote',
    'br',
    'caption',
    'del',
    'div',
    'em',
    'h1',
    'h2',
    'h3',
    'h4',
    'h5',
    'h6',
    'hr',
    'ins',
    'img',
    'li',
    'object',
    'ol',
    'p',
    'pre',
    'q',
    'param',
    'small',
    'span',
    'strong',
    'sub',
    'sup',
    'table',
    'tbody',
    'td',
    'th',
    'tr',
    'ul',
]

# But we specified rare elements.
# They can`t be generated by TinyMCE.
rare = [
    'abbr',
    'acronym',
    'area',
    'b',
    'bdo',
    'big',
    'cite',
    'code',
    'col',
    'colgroup',
    'dd',
    'dfn',
    'dl',
    'dt',
    'i',
    'kbd',
    'map',
    'samp',
    'tfoot',
    'thead',
    'tt',
    'var',
    'u',
]

# Remove attributes for all elements:
remove_for_all = [
    # It can overwrite sites accesskey:
    'accesskey',
    # We don`t want to allow to use classes, reserved for core site functions.
    'class',
    # It is deprecated and not used:
    'compact',
    # It is deprecated and will break view:
    'bgcolor',
    # It will break view
    'frameborder',
    # It is deprecated and will break view:
    'hspace',
    # We want to disable all scripts:
    'onblur',
    'onchange',
    'onclick',
    'ondblclick',
    'onfocus',
    'onkeydown',
    'onkeypress',
    'onkeyup',
    'onload',
    'onmousedown',
    'onmousemove',
    'onmouseout',
    'onmouseover',
    'onmouseup',
    'onreset',
    'onselect',
    'onsubmit',
    'onunload',
    # It is deprecated and will break view:
    'nowrap',
    # It is deprecated and will break view:
    'vspace',
]

# Remove attributes for specified elements:
remove_for = {}

remove_for['body'] = [
    # It will break text align:
    'align',
    # Deprecated, will break view
    'alink',
    # Deprecated, will break view
    'background',
    # Deprecated, will break view
    'link',
    # Deprecated, will break view
    'text',
    # Deprecated, will break view
    'vlink',
]


# It is deprecated, it can be disabled if aligning of images will be disabled.
#remove_for_tabs['br'] = [
#    'clear',
#]

# It is deprecated, it can be disabled if aligning in tables will be disabled.
#remove_for['caption'] = [
#    'align',
#]

remove_for['col'] = [
    'width',
]

remove_for['colgroup'] = [
    'width',
]

remove_for['div'] = [
    # It will break text align:
    'align',
]

remove_for['h1'] = [
    # It will break text align:
    'align',
]

remove_for['h2'] = [
    # It will break text align:
    'align',
]

remove_for['h3'] = [
    # It will break text align:
    'align',
]

remove_for['h4'] = [
    # It will break text align:
    'align',
]

remove_for['h5'] = [
    # It will break text align:
    'align',
]

remove_for['h6'] = [
    # It will break text align:
    'align',
]

remove_for['html'] = [
    # It is deprecated and can break view:
    'version'
]

remove_for['hr'] = [
    # It will break text align:
    'align',
    # It is deprecated and will break view: 
    'noshade',
    # It is deprecated and will break view:
    'size',
    # It is deprecated and will break view:
    'width',
]

remove_for['img'] = [
    # It will break text align:
    'align',
    # It is deprecated and will break view:
    'border',
    # Fix: it must be disabled if area and map elements will be disabled:
    #'ismap',
    # Fix: it must be disabled if area and map elements will be disabled:
    #'usemap',
]

remove_for['input'] = [
    # It will break text align:
    'align',
    # Fix: it must be disabled if area and map elements will be disabled:
    #'ismap',
    # It can break meaning of button
    'src',
    # Fix: it must be disabled if area and map elements will be disabled:
    #'usemap',
]

remove_for['legend'] = [
    # It will break text align:
    'align',
]

remove_for['li'] = [
    # It is deprecated and it will break formatting
    'type',
    # It is deprecated and it will break formatting
    'value',
]

remove_for['object'] = [
    # It will break text align:
    'align',
    # It is deprecated and will break view:
    'border',
    # Fix: it must be disabled if area and map elements will be disabled:
    #'usemap',
]

remove_for['ol'] = [
    # It is deprecated and it will break formatting
    'start',
    # It is deprecated and it will break formatting
    'type',
]

remove_for['p'] = [
    # It will break text align:
    'align',
]

remove_for['pre'] = [
    # It is deprecated and it will break formatting
    'width',
]

remove_for['table'] = [
    # It will break text align:
    'align',
    # It will break view:
    'border',
    # It will break view:
    'cellpadding',
    # It will break view:
    'cellspacing',
    # It will break view:
    'frame',
    # It will break view:
    'rules',
    # It will break view:
    'width',
]

remove_for['td'] = [
    # It will break view:
    'height',
    # It will break view:
    'width',
]

remove_for['th'] = [
    # It will break view:
    'height',
    # It will break view:
    'width',
]

remove_for['ul'] = [
    # It is deprecated and it will break formatting
    'type',
]

# Fix: anchors (in this order, because of allow_empty)
#replace_elements['a'] = Or(rules=[
#    Elements(allow_empty=True, rules=get_dict(
#        source=elements,
#        replace={
#            'name': values['name~r'],
#        })
#    ),
#    Elements(allow_empty=False, rules=get_dict(
#        source=elements,
#        replace={
#            'href': values['href~r'],
#        })
#    ),
#])

# Fix: check values:
#values['char'] = character
## alignment char, e.g. char=':' (COL, COLGROUP, TBODY, TD, TFOOT, TH, THEAD, TR)
#
#values['charoff'] = length
## offset for alignment char (COL, COLGROUP, TBODY, TD, TFOOT, TH, THEAD, TR)
#
#values['charset'] = charset
## char encoding of linked resource (A, LINK, SCRIPT)
#
#values['checked'] = RegExp(regexp=r'(checked)$')
## for radio buttons and check boxes (INPUT)
#
#values['cite'] = uri
## URI for source document or msg (BLOCKQUOTE, Q)
#
#values['cite'] = uri
## info on reason for change (DEL, INS)
#
#values['classid'] = uri
## identifies an implementation (OBJECT)
#
#values['codebase'] = uri
## base URI for classid, data, archive (OBJECT)
#
#values['codetype'] = content_type
## content type for code (OBJECT)
#
#values['cols'] = multi_lengths
## list of lengths, default: 100% = 1 col (FRAMESET)
#
#values['cols'] = number_required
##  (TEXTAREA)
#
#values['colspan'] = number
## number of cols spanned by cell (TD, TH)
#
#values['content'] = text_required
## associated information (META)
#
#values['coords'] = coords # Fix: The number and order of values depends on the shape being defined.
## comma-separated list of lengths (AREA)
#
#values['coords'] = coords
## for use with client-side image maps (A)
#
#values['data'] = uri
## reference to object's data (OBJECT)
#
#values['datetime'] = datetime
## date and time of change (DEL, INS)
#
#values['declare'] = RegExp(regexp=r'(declare)$')
## declare but don't instantiate flag (OBJECT)
#
#values['defer'] = RegExp(regexp=r'(defer)$')
## UA may defer execution of script (SCRIPT)
#
#values['dir'] = RegExp(regexp=r'(ltr|rtl)$')
## direction for weak/neutral text (All elements but APPLET, BASE, BASEFONT, BDO, BR, FRAME, FRAMESET, IFRAME, PARAM, SCRIPT)
#
#values['dir~r'] = RegExp(regexp=r'(ltr|rtl)$', required=True)
## directionality (BDO)
#
#values['disabled'] = RegExp(regexp=r'(disabled)$')
## unavailable in this context (BUTTON, INPUT, OPTGROUP, OPTION, SELECT, TEXTAREA)
#
#values['enctype'] = content_type
##  (FORM)
#
#values['for'] = name
## matches field ID value (LABEL)
#
#values['headers'] = idrefs
## list of id's for header cells (TD, TH)
#
#values['href'] = uri
## URI for linked resource (A, AREA, LINK)
#
#values['href~r'] = uri_required
## Used by href version of tag A
#
#values['href'] = uri
## URI that acts as base URI (BASE)
#
#values['hreflang'] = language_code # Fix: may only be used when href is specified.
## language code (A, LINK)
#
#values['http-equiv'] = name
## HTTP response header name (META)
#
#values['marginheight'] = pixels
## margin height in pixels (FRAME, IFRAME)
#
#values['marginwidth'] = pixels
## margin widths in pixels (FRAME, IFRAME)
#
#values['maxlength'] = number
## max chars for text fields (INPUT)
#
#values['media'] = media_descs
## designed for use with these media (STYLE)
#
#values['media'] = media_descs
## for rendering on these media (LINK)
#
#values['multiple'] = RegExp(regexp=r'(multiple)$')
## default is single selection (SELECT)
#
#values['nohref'] = RegExp(regexp=r'(nohref)$')
## this region has no action (AREA)
#
#values['noresize'] = RegExp(regexp=r'(noresize)$')
## allow users to resize frames? (FRAME)
#
#values['profile'] = uris
## named dictionary of meta info (HEAD)
#
#values['rows'] = multi_lengths
## list of lengths, default: 100% = 1 row (FRAMESET)
#
#values['rows'] = number_required
##  (TEXTAREA)
#
#values['rowspan'] = number
## number of rows spanned by cell (TD, TH)
#
#values['scheme'] = text
## select form of content (META)
#
#values['scope'] = RegExp(regexp=r'(row|col|rowgroup|colgroup)$')
## scope covered by header cells (TD, TH)
#
#values['scrolling'] = RegExp(regexp=r'(yes|no|auto)$')
## scrollbar or none (FRAME, IFRAME)
#
#values['selected'] = RegExp(regexp=r'(selected)$')
##  (OPTION)
#
#values['shape'] = RegExp(regexp=r'(default|rect|circle|poly)$')
## controls interpretation of coords (AREA)
#
#values['shape'] = RegExp(regexp=r'(default|rect|circle|poly)$')
## for use with client-side image maps (A)
#
#values['span'] = positive_number
## COL attributes affect N columns (COL)
#
#values['span'] = positive_number
## default number of columns in group (COLGROUP)
#
#values['standby'] = text
## message to show while loading (OBJECT)
#
#values['style'] = style_sheet
## associated style info (All elements but BASE, BASEFONT, HEAD, HTML, META, PARAM, SCRIPT, STYLE, TITLE)
#
#values['summary'] = text
## purpose/structure for speech output (TABLE)
#
#values['tabindex'] = number
## position in tabbing order (A, AREA, BUTTON, INPUT, OBJECT, SELECT, TEXTAREA)
#
#values['target'] = frame_target
## render in this frame (A, AREA, BASE, FORM, LINK)
#
#values['title'] = text
## advisory title (All elements but BASE, BASEFONT, HEAD, HTML, META, PARAM, SCRIPT, TITLE)
#
#values['valign'] = RegExp(regexp=r'(top|middle|bottom|baseline)$')
## vertical alignment in cells (COL, COLGROUP, TBODY, TD, TFOOT, TH, THEAD, TR)
